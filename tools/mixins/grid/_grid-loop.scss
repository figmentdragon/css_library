@use 'sass:math';

/* MIXIN: Grid Loop */
@mixin grid-loop($name) {
  @for $i from 0 through $grid-columns {
    @if $i != 0 {
      .col--#{$name}-#{$i} {
        width : percentage(math.div($i, $grid-columns));

        .row--flex & {
          width      : auto;
          max-width  : percentage(math.div($i, $grid-columns));
          float      : none;
          flex-basis : percentage(math.div($i, $grid-columns));
        }
      }
    }
    .col--#{$name}-offset-#{$i} {
      margin-left : percentage(math.div($i, $grid-columns));
    }
  }
}

/* Max width of container */

/* Number of total columns */

/* Breakpoints */

/* Grid loop mixin */

/* Clearfix */

/* Default variables and helper mixins */

/* Grid scaffolding */
.container {
  @include    clearfix;
  max-width : $grid-max-width;
  margin    : 0 auto;
  padding   : 0 $grid-gutter;
}

.row {
  margin-left : $grid-gutter;
  list-style  : none;

  &:not(.row--flex) {
    @include clearfix;
  }

  &.row--gutterless {
    margin-left : 0;
  }

  &.row--flex {
    display   : flex;
    flex-wrap : wrap;
  }
}

.col {
  box-sizing   : border-box;
  float        : left;
  padding-left : $grid-gutter;

  .row--gutterless & {
    padding-left : 0;
  }
}

/* Columns generator */

@each $breakpoint in $breakpoints {
  $name        : nth($breakpoint, 1);
  $declaration : nth($breakpoint, 2);
  @media
      only screen
    and (and #{$declaration} : and #{$declaration}) {
    @include grid-loop($name);
  }
}
